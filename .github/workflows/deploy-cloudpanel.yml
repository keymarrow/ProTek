name: Deploy to CloudPanel

on:
  push:
    branches: [ main ]
    # Only rebuild when relevant files change
    paths:
      - 'content/**'
      - 'src/**'
      - 'components/**'
      - 'lib/**'
      - 'public/**'
      - 'next.config.ts'
      - 'package.json'
      - 'package-lock.json'
      - 'BlogPage.tsx'
      - 'MarketingPage.tsx'
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: cloudpanel-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build static site
        run: npm run build

      - name: Stamp build version
        run: |
          echo "commit=${GITHUB_SHA}" > out/version.txt
          echo "built_at=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> out/version.txt
          cat out/version.txt

      - name: Verify export folder
        run: |
          if [ ! -d "out" ]; then
            echo "out/ directory not found. Ensure next.config.ts sets output: 'export' or run next export." >&2
            exit 1
          fi
          ls -la out | head -100

      - name: Deploy to CloudPanel (SFTP)
        uses: wlixcc/SFTP-Deploy-Action@v1.2.5
        with:
          server: ${{ secrets.CP_HOST }}
          port: ${{ secrets.CP_PORT }}
          username: ${{ secrets.CP_USER }}
          ssh_private_key: ${{ secrets.CP_KEY }}
          local_path: ./out/*
          remote_path: ${{ secrets.CP_DEST }}
          # Remove files on server that no longer exist locally
          delete: true
          # Force SFTP only (no SSH commands)
          sftp_only: true

      - name: Inspect remote (optional)
        if: always()
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.CP_HOST }}
          username: ${{ secrets.CP_USER }}
          port: ${{ secrets.CP_PORT }}
          key: ${{ secrets.CP_KEY }}
          script: |
            echo "Remote pwd: $(pwd)"
            echo "Listing $CP_DEST (from env won't expand in remote):"
            ls -la "${{ secrets.CP_DEST }}" || true
            echo '--- version.txt (if present) ---'
            cat "${{ secrets.CP_DEST }}/version.txt" 2>/dev/null || echo 'version.txt not found'
            echo '--- blog dir ---'
            ls -la "${{ secrets.CP_DEST }}/blog" 2>/dev/null || echo 'blog dir not found'
